version: '3.8'

services:
  db:
    image: postgres:13
    container_name: stock_data_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stock_network

  adminer:
    image: adminer
    container_name: stock_data_adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - stock_network

  data_fetcher:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_data_fetcher
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
 
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./data:/app/data
    stdin_open: true
    tty: true
    command: python /app/db.py
    networks:
      - stock_network

networks:
  stock_network:
    driver: bridge

volumes:
  pgdata: